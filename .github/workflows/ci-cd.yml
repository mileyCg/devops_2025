name: Goal Tracker CI/CD

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run backend tests
      run: |
        cd backend
        chmod +x ./mvnw
        ./mvnw clean test
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --watch=false --browsers=ChromeHeadless

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build backend image
      run: |
        cd backend
        docker build -t goal-tracker-backend:${{ github.sha }} .
        
    - name: Build frontend image
      run: |
        cd frontend
        docker build -t goal-tracker-frontend:${{ github.sha }} .
        
    - name: Test Docker images
      run: |
        echo "✅ Backend image built successfully"
        echo "✅ Frontend image built successfully"
        docker images | grep goal-tracker
