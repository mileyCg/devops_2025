steps:
# Build and push images
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/goal-tracker-backend:$BRANCH_NAME', './backend']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/goal-tracker-frontend:$BRANCH_NAME', './frontend']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/goal-tracker-backend:$BRANCH_NAME']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/goal-tracker-frontend:$BRANCH_NAME']

# Create namespace
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo -e "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: $BRANCH_NAME" > namespace.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'namespace.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=devops'

# Generate and apply manifests
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: '/builder/kustomize'
  args: ['edit', 'set', 'image', 'gcr.io/$PROJECT_ID/goal-tracker-backend=gcr.io/$PROJECT_ID/goal-tracker-backend:$BRANCH_NAME', 'gcr.io/$PROJECT_ID/goal-tracker-frontend=gcr.io/$PROJECT_ID/goal-tracker-frontend:$BRANCH_NAME']
  dir: 'k8s/overlays/ephemeral'
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'kustomize'
  args: ['build', 'k8s/overlays/ephemeral', '-o', 'k8s-manifests.yaml']
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'k8s-manifests.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=devops'

# Get external IP
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['get', 'service', 'ephemeral-frontend', '-n', '$BRANCH_NAME', '-o', 'jsonpath={.status.loadBalancer.ingress[0].ip}']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=devops'

options:
  logging: CLOUD_LOGGING_ONLY
